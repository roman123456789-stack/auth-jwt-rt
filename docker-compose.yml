version: '3.8'

services:

  api_gateaway:
    build:
      context: ../api_gateaway
    ports:
      - "8000:8000"
    networks:
      - app-network
  auth_microservice:
    build:
      context: ./
    ports:
      - "3000:3000"
    networks:
      - app-network

  notification_microservice:
    build:
      context: ../notification_microservice
    ports:
      - "3001:3001"
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: secret_password
      MYSQL_DATABASE: auth_module
      MYSQL_USER: user
      MYSQL_PASSWORD: secret_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-psecret_password"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    command: redis-server --requirepass redis_password --save 60 1 --loglevel warning
    environment:
      - REDIS_PASSWORD=redis_password

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  
networks:
  app-network:
    driver: bridge